// ====================================================================================
// Webots Arduino Interface (wai)
//   This program provides an interfave between Arduino code and a Webots robot
//   so that the simulated robot can be controlled using unaltered Arduino code for 
//   a similar real robot
//
// Module: waiL298N
//         Mimics the Arduino Library - L298N by Andrea Lombardo
//         Michael Schofield March 2022
//         UNSW Computer Science & Engineering
// ====================================================================================

//-------------------------------------------------------------------------------------
// Libraries
//-------------------------------------------------------------------------------------


//-------------------------------------------------------------------------------------
// Header
//-------------------------------------------------------------------------------------
class L298N {
public:
  L298N(int pinEnable, int pinIN1, int pinIN2);
  ~L298N();
  void initialise();
  void setSpeed(int pwmVal);
  int getSpeed();
  void forward();
  void backward();
  void stop();
  void reset();
private:
  int _pinEnable;
  int _pinIN1;
  int _pinIN2;
  int _pwmVal;
  Motor* _motor;
  
};

//-------------------------------------------------------------------------------------
// Constructor
//-------------------------------------------------------------------------------------
L298N::L298N(int pinEnable, int pinIN1, int pinIN2) {

  // Initialise the board
  _pinEnable = pinEnable;
  _pinIN1 = pinIN1;
  _pinIN2 = pinIN2;
  _pwmVal = 0;
  _motor = NULL;

}


//-------------------------------------------------------------------------------------
// Destructor
//-------------------------------------------------------------------------------------
L298N::~L298N() {

  // Free the resources
  
}

//-------------------------------------------------------------------------------------
// initialise
//-------------------------------------------------------------------------------------
void L298N::initialise() {

  _motor = robot->getMotor(getDeviceName(_pinEnable, _pinIN1, _pinIN2));  
  _motor->setPosition(INFINITY);
  
}

//-------------------------------------------------------------------------------------
// setSpeed
//-------------------------------------------------------------------------------------
void L298N::setSpeed(int pwmVal) {

   _pwmVal = pwmVal;
  
}

//-------------------------------------------------------------------------------------
// getSpeed
//-------------------------------------------------------------------------------------
int L298N::getSpeed() {

   return _pwmVal;
  
}

//-------------------------------------------------------------------------------------
// forward
//-------------------------------------------------------------------------------------
void L298N::forward() {

  if (_motor == NULL) initialise();
  _motor->setVelocity((double)_pwmVal / 255.0 * -MAX_SPEED);

}

//-------------------------------------------------------------------------------------
// backward
//-------------------------------------------------------------------------------------
void L298N::backward() {

  if (_motor == NULL) initialise();
  _motor->setVelocity((double)_pwmVal / 255.0 * MAX_SPEED);

}

//-------------------------------------------------------------------------------------
// stop
//-------------------------------------------------------------------------------------
void L298N::stop() {

  if (_motor == NULL) initialise();
  _motor->setVelocity(0);

}

//-------------------------------------------------------------------------------------
// reset
//-------------------------------------------------------------------------------------
void L298N::reset() {

  stop();
  setSpeed(0);

}
